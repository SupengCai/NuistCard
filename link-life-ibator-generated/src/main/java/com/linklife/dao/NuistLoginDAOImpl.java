package com.linklife.dao;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.linklife.domain.ibator.NuistLogin;
import com.linklife.domain.ibator.NuistLoginExample;
import java.sql.SQLException;
import java.util.List;

public class NuistLoginDAOImpl implements NuistLoginDAO {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public NuistLoginDAOImpl( SqlMapClient sqlMapClient ) {

		super();
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public int countByExample( NuistLoginExample example ) throws SQLException {

		Integer count = ( Integer )sqlMapClient.queryForObject( "nuist_login.ibatorgenerated_countByExample", example );
		return count.intValue();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public int deleteByExample( NuistLoginExample example ) throws SQLException {

		int rows = sqlMapClient.delete( "nuist_login.ibatorgenerated_deleteByExample", example );
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public int deleteByPrimaryKey( String usernumber ) throws SQLException {

		NuistLogin key = new NuistLogin();
		key.setUsernumber( usernumber );
		int rows = sqlMapClient.delete( "nuist_login.ibatorgenerated_deleteByPrimaryKey", key );
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public String insert( NuistLogin record ) throws SQLException {

		Object newKey = sqlMapClient.insert( "nuist_login.ibatorgenerated_insert", record );
		return ( String )newKey;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public String insertSelective( NuistLogin record ) throws SQLException {

		Object newKey = sqlMapClient.insert( "nuist_login.ibatorgenerated_insertSelective", record );
		return ( String )newKey;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public List selectByExample( NuistLoginExample example ) throws SQLException {

		List list = sqlMapClient.queryForList( "nuist_login.ibatorgenerated_selectByExample", example );
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public NuistLogin selectByPrimaryKey( String usernumber ) throws SQLException {

		NuistLogin key = new NuistLogin();
		key.setUsernumber( usernumber );
		NuistLogin record = ( NuistLogin )sqlMapClient.queryForObject( "nuist_login.ibatorgenerated_selectByPrimaryKey", key );
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public int updateByExampleSelective( NuistLogin record, NuistLoginExample example ) throws SQLException {

		UpdateByExampleParms parms = new UpdateByExampleParms( record, example );
		int rows = sqlMapClient.update( "nuist_login.ibatorgenerated_updateByExampleSelective", parms );
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public int updateByExample( NuistLogin record, NuistLoginExample example ) throws SQLException {

		UpdateByExampleParms parms = new UpdateByExampleParms( record, example );
		int rows = sqlMapClient.update( "nuist_login.ibatorgenerated_updateByExample", parms );
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public int updateByPrimaryKeySelective( NuistLogin record ) throws SQLException {

		int rows = sqlMapClient.update( "nuist_login.ibatorgenerated_updateByPrimaryKeySelective", record );
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public int updateByPrimaryKey( NuistLogin record ) throws SQLException {

		int rows = sqlMapClient.update( "nuist_login.ibatorgenerated_updateByPrimaryKey", record );
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	private static class UpdateByExampleParms extends NuistLoginExample {

		private Object record;


		public UpdateByExampleParms( Object record, NuistLoginExample example ) {

			super( example );
			this.record = record;
		}


		public Object getRecord() {

			return record;
		}
	}
}