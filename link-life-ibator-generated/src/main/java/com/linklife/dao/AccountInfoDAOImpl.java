package com.linklife.dao;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.linklife.domain.ibator.AccountInfo;
import com.linklife.domain.ibator.AccountInfoExample;
import java.sql.SQLException;
import java.util.List;

public class AccountInfoDAOImpl implements AccountInfoDAO {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table account_info
     *
     * @ibatorgenerated Sat Jan 03 16:09:10 CST 2015
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account_info
     *
     * @ibatorgenerated Sat Jan 03 16:09:10 CST 2015
     */
    public AccountInfoDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account_info
     *
     * @ibatorgenerated Sat Jan 03 16:09:10 CST 2015
     */
    public int countByExample(AccountInfoExample example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("account_info.ibatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account_info
     *
     * @ibatorgenerated Sat Jan 03 16:09:10 CST 2015
     */
    public int deleteByExample(AccountInfoExample example) throws SQLException {
        int rows = sqlMapClient.delete("account_info.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account_info
     *
     * @ibatorgenerated Sat Jan 03 16:09:10 CST 2015
     */
    public int deleteByPrimaryKey(Integer accountId) throws SQLException {
        AccountInfo key = new AccountInfo();
        key.setAccountId(accountId);
        int rows = sqlMapClient.delete("account_info.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account_info
     *
     * @ibatorgenerated Sat Jan 03 16:09:10 CST 2015
     */
    public Integer insert(AccountInfo record) throws SQLException {
        Object newKey = sqlMapClient.insert("account_info.ibatorgenerated_insert", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account_info
     *
     * @ibatorgenerated Sat Jan 03 16:09:10 CST 2015
     */
    public Integer insertSelective(AccountInfo record) throws SQLException {
        Object newKey = sqlMapClient.insert("account_info.ibatorgenerated_insertSelective", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account_info
     *
     * @ibatorgenerated Sat Jan 03 16:09:10 CST 2015
     */
    public List selectByExample(AccountInfoExample example) throws SQLException {
        List list = sqlMapClient.queryForList("account_info.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account_info
     *
     * @ibatorgenerated Sat Jan 03 16:09:10 CST 2015
     */
    public AccountInfo selectByPrimaryKey(Integer accountId) throws SQLException {
        AccountInfo key = new AccountInfo();
        key.setAccountId(accountId);
        AccountInfo record = (AccountInfo) sqlMapClient.queryForObject("account_info.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account_info
     *
     * @ibatorgenerated Sat Jan 03 16:09:10 CST 2015
     */
    public int updateByExampleSelective(AccountInfo record, AccountInfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("account_info.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account_info
     *
     * @ibatorgenerated Sat Jan 03 16:09:10 CST 2015
     */
    public int updateByExample(AccountInfo record, AccountInfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("account_info.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account_info
     *
     * @ibatorgenerated Sat Jan 03 16:09:10 CST 2015
     */
    public int updateByPrimaryKeySelective(AccountInfo record) throws SQLException {
        int rows = sqlMapClient.update("account_info.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table account_info
     *
     * @ibatorgenerated Sat Jan 03 16:09:10 CST 2015
     */
    public int updateByPrimaryKey(AccountInfo record) throws SQLException {
        int rows = sqlMapClient.update("account_info.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table account_info
     *
     * @ibatorgenerated Sat Jan 03 16:09:10 CST 2015
     */
    private static class UpdateByExampleParms extends AccountInfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, AccountInfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}