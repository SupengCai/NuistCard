package com.linklife.dao;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.linklife.domain.ibator.NuistSuggest;
import com.linklife.domain.ibator.NuistSuggestExample;
import java.sql.SQLException;
import java.util.List;

public class NuistSuggestDAOImpl implements NuistSuggestDAO {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public NuistSuggestDAOImpl(SqlMapClient sqlMapClient) {
		super();
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public int countByExample(NuistSuggestExample example) throws SQLException {
		Integer count = (Integer) sqlMapClient.queryForObject("nuist_suggest.ibatorgenerated_countByExample", example);
		return count.intValue();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public int deleteByExample(NuistSuggestExample example) throws SQLException {
		int rows = sqlMapClient.delete("nuist_suggest.ibatorgenerated_deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public int deleteByPrimaryKey(Integer suggestId) throws SQLException {
		NuistSuggest key = new NuistSuggest();
		key.setSuggestId(suggestId);
		int rows = sqlMapClient.delete("nuist_suggest.ibatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public Integer insert(NuistSuggest record) throws SQLException {
		Object newKey = sqlMapClient.insert("nuist_suggest.ibatorgenerated_insert", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public Integer insertSelective(NuistSuggest record) throws SQLException {
		Object newKey = sqlMapClient.insert("nuist_suggest.ibatorgenerated_insertSelective", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public List selectByExample(NuistSuggestExample example) throws SQLException {
		List list = sqlMapClient.queryForList("nuist_suggest.ibatorgenerated_selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public NuistSuggest selectByPrimaryKey(Integer suggestId) throws SQLException {
		NuistSuggest key = new NuistSuggest();
		key.setSuggestId(suggestId);
		NuistSuggest record = (NuistSuggest) sqlMapClient
				.queryForObject("nuist_suggest.ibatorgenerated_selectByPrimaryKey", key);
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public int updateByExampleSelective(NuistSuggest record, NuistSuggestExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("nuist_suggest.ibatorgenerated_updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public int updateByExample(NuistSuggest record, NuistSuggestExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("nuist_suggest.ibatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public int updateByPrimaryKeySelective(NuistSuggest record) throws SQLException {
		int rows = sqlMapClient.update("nuist_suggest.ibatorgenerated_updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public int updateByPrimaryKey(NuistSuggest record) throws SQLException {
		int rows = sqlMapClient.update("nuist_suggest.ibatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	private static class UpdateByExampleParms extends NuistSuggestExample {
		private Object record;

		public UpdateByExampleParms(Object record, NuistSuggestExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}