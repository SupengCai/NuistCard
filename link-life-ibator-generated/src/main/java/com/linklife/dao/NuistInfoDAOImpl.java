package com.linklife.dao;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.linklife.domain.ibator.NuistInfo;
import com.linklife.domain.ibator.NuistInfoExample;
import java.sql.SQLException;
import java.util.List;

public class NuistInfoDAOImpl implements NuistInfoDAO {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table nuist_info
	 * @ibatorgenerated  Tue Jul 14 21:09:31 CST 2015
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_info
	 * @ibatorgenerated  Tue Jul 14 21:09:31 CST 2015
	 */
	public NuistInfoDAOImpl( SqlMapClient sqlMapClient ) {

		super();
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_info
	 * @ibatorgenerated  Tue Jul 14 21:09:31 CST 2015
	 */
	public int countByExample( NuistInfoExample example ) throws SQLException {

		Integer count = ( Integer )sqlMapClient.queryForObject( "nuist_info.ibatorgenerated_countByExample", example );
		return count.intValue();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_info
	 * @ibatorgenerated  Tue Jul 14 21:09:31 CST 2015
	 */
	public int deleteByExample( NuistInfoExample example ) throws SQLException {

		int rows = sqlMapClient.delete( "nuist_info.ibatorgenerated_deleteByExample", example );
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_info
	 * @ibatorgenerated  Tue Jul 14 21:09:31 CST 2015
	 */
	public int deleteByPrimaryKey( Integer accountId ) throws SQLException {

		NuistInfo key = new NuistInfo();
		key.setAccountId( accountId );
		int rows = sqlMapClient.delete( "nuist_info.ibatorgenerated_deleteByPrimaryKey", key );
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_info
	 * @ibatorgenerated  Tue Jul 14 21:09:31 CST 2015
	 */
	public Integer insert( NuistInfo record ) throws SQLException {

		Object newKey = sqlMapClient.insert( "nuist_info.ibatorgenerated_insert", record );
		return ( Integer )newKey;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_info
	 * @ibatorgenerated  Tue Jul 14 21:09:31 CST 2015
	 */
	public Integer insertSelective( NuistInfo record ) throws SQLException {

		Object newKey = sqlMapClient.insert( "nuist_info.ibatorgenerated_insertSelective", record );
		return ( Integer )newKey;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_info
	 * @ibatorgenerated  Tue Jul 14 21:09:31 CST 2015
	 */
	public List selectByExample( NuistInfoExample example ) throws SQLException {

		List list = sqlMapClient.queryForList( "nuist_info.ibatorgenerated_selectByExample", example );
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_info
	 * @ibatorgenerated  Tue Jul 14 21:09:31 CST 2015
	 */
	public NuistInfo selectByPrimaryKey( Integer accountId ) throws SQLException {

		NuistInfo key = new NuistInfo();
		key.setAccountId( accountId );
		NuistInfo record = ( NuistInfo )sqlMapClient.queryForObject( "nuist_info.ibatorgenerated_selectByPrimaryKey", key );
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_info
	 * @ibatorgenerated  Tue Jul 14 21:09:31 CST 2015
	 */
	public int updateByExampleSelective( NuistInfo record, NuistInfoExample example ) throws SQLException {

		UpdateByExampleParms parms = new UpdateByExampleParms( record, example );
		int rows = sqlMapClient.update( "nuist_info.ibatorgenerated_updateByExampleSelective", parms );
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_info
	 * @ibatorgenerated  Tue Jul 14 21:09:31 CST 2015
	 */
	public int updateByExample( NuistInfo record, NuistInfoExample example ) throws SQLException {

		UpdateByExampleParms parms = new UpdateByExampleParms( record, example );
		int rows = sqlMapClient.update( "nuist_info.ibatorgenerated_updateByExample", parms );
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_info
	 * @ibatorgenerated  Tue Jul 14 21:09:31 CST 2015
	 */
	public int updateByPrimaryKeySelective( NuistInfo record ) throws SQLException {

		int rows = sqlMapClient.update( "nuist_info.ibatorgenerated_updateByPrimaryKeySelective", record );
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_info
	 * @ibatorgenerated  Tue Jul 14 21:09:31 CST 2015
	 */
	public int updateByPrimaryKey( NuistInfo record ) throws SQLException {

		int rows = sqlMapClient.update( "nuist_info.ibatorgenerated_updateByPrimaryKey", record );
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table nuist_info
	 * @ibatorgenerated  Tue Jul 14 21:09:31 CST 2015
	 */
	private static class UpdateByExampleParms extends NuistInfoExample {

		private Object record;


		public UpdateByExampleParms( Object record, NuistInfoExample example ) {

			super( example );
			this.record = record;
		}


		public Object getRecord() {

			return record;
		}
	}
}