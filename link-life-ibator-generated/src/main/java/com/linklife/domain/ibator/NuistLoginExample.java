package com.linklife.domain.ibator;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class NuistLoginExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public NuistLoginExample() {

		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	protected NuistLoginExample( NuistLoginExample example ) {

		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public void setOrderByClause( String orderByClause ) {

		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public String getOrderByClause() {

		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public List getOredCriteria() {

		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public void or( Criteria criteria ) {

		oredCriteria.add( criteria );
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public Criteria createCriteria() {

		Criteria criteria = createCriteriaInternal();
		if( oredCriteria.size() == 0 ) {
			oredCriteria.add( criteria );
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	protected Criteria createCriteriaInternal() {

		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public void clear() {

		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table nuist_login
	 * @ibatorgenerated  Sun Jul 12 10:23:21 CST 2015
	 */
	public static class Criteria {

		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;


		protected Criteria() {

			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}


		public boolean isValid() {

			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0 || criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}


		public List getCriteriaWithoutValue() {

			return criteriaWithoutValue;
		}


		public List getCriteriaWithSingleValue() {

			return criteriaWithSingleValue;
		}


		public List getCriteriaWithListValue() {

			return criteriaWithListValue;
		}


		public List getCriteriaWithBetweenValue() {

			return criteriaWithBetweenValue;
		}


		protected void addCriterion( String condition ) {

			if( condition == null ) {
				throw new RuntimeException( "Value for condition cannot be null" );
			}
			criteriaWithoutValue.add( condition );
		}


		protected void addCriterion( String condition, Object value, String property ) {

			if( value == null ) {
				throw new RuntimeException( "Value for " + property + " cannot be null" );
			}
			Map map = new HashMap();
			map.put( "condition", condition );
			map.put( "value", value );
			criteriaWithSingleValue.add( map );
		}


		protected void addCriterion( String condition, List values, String property ) {

			if( values == null || values.size() == 0 ) {
				throw new RuntimeException( "Value list for " + property + " cannot be null or empty" );
			}
			Map map = new HashMap();
			map.put( "condition", condition );
			map.put( "values", values );
			criteriaWithListValue.add( map );
		}


		protected void addCriterion( String condition, Object value1, Object value2, String property ) {

			if( value1 == null || value2 == null ) {
				throw new RuntimeException( "Between values for " + property + " cannot be null" );
			}
			List list = new ArrayList();
			list.add( value1 );
			list.add( value2 );
			Map map = new HashMap();
			map.put( "condition", condition );
			map.put( "values", list );
			criteriaWithBetweenValue.add( map );
		}


		public Criteria andUsernumberIsNull() {

			addCriterion( "usernumber is null" );
			return this;
		}


		public Criteria andUsernumberIsNotNull() {

			addCriterion( "usernumber is not null" );
			return this;
		}


		public Criteria andUsernumberEqualTo( String value ) {

			addCriterion( "usernumber =", value, "usernumber" );
			return this;
		}


		public Criteria andUsernumberNotEqualTo( String value ) {

			addCriterion( "usernumber <>", value, "usernumber" );
			return this;
		}


		public Criteria andUsernumberGreaterThan( String value ) {

			addCriterion( "usernumber >", value, "usernumber" );
			return this;
		}


		public Criteria andUsernumberGreaterThanOrEqualTo( String value ) {

			addCriterion( "usernumber >=", value, "usernumber" );
			return this;
		}


		public Criteria andUsernumberLessThan( String value ) {

			addCriterion( "usernumber <", value, "usernumber" );
			return this;
		}


		public Criteria andUsernumberLessThanOrEqualTo( String value ) {

			addCriterion( "usernumber <=", value, "usernumber" );
			return this;
		}


		public Criteria andUsernumberLike( String value ) {

			addCriterion( "usernumber like", value, "usernumber" );
			return this;
		}


		public Criteria andUsernumberNotLike( String value ) {

			addCriterion( "usernumber not like", value, "usernumber" );
			return this;
		}


		public Criteria andUsernumberIn( List values ) {

			addCriterion( "usernumber in", values, "usernumber" );
			return this;
		}


		public Criteria andUsernumberNotIn( List values ) {

			addCriterion( "usernumber not in", values, "usernumber" );
			return this;
		}


		public Criteria andUsernumberBetween( String value1, String value2 ) {

			addCriterion( "usernumber between", value1, value2, "usernumber" );
			return this;
		}


		public Criteria andUsernumberNotBetween( String value1, String value2 ) {

			addCriterion( "usernumber not between", value1, value2, "usernumber" );
			return this;
		}


		public Criteria andAccountIdIsNull() {

			addCriterion( "account_id is null" );
			return this;
		}


		public Criteria andAccountIdIsNotNull() {

			addCriterion( "account_id is not null" );
			return this;
		}


		public Criteria andAccountIdEqualTo( Integer value ) {

			addCriterion( "account_id =", value, "accountId" );
			return this;
		}


		public Criteria andAccountIdNotEqualTo( Integer value ) {

			addCriterion( "account_id <>", value, "accountId" );
			return this;
		}


		public Criteria andAccountIdGreaterThan( Integer value ) {

			addCriterion( "account_id >", value, "accountId" );
			return this;
		}


		public Criteria andAccountIdGreaterThanOrEqualTo( Integer value ) {

			addCriterion( "account_id >=", value, "accountId" );
			return this;
		}


		public Criteria andAccountIdLessThan( Integer value ) {

			addCriterion( "account_id <", value, "accountId" );
			return this;
		}


		public Criteria andAccountIdLessThanOrEqualTo( Integer value ) {

			addCriterion( "account_id <=", value, "accountId" );
			return this;
		}


		public Criteria andAccountIdIn( List values ) {

			addCriterion( "account_id in", values, "accountId" );
			return this;
		}


		public Criteria andAccountIdNotIn( List values ) {

			addCriterion( "account_id not in", values, "accountId" );
			return this;
		}


		public Criteria andAccountIdBetween( Integer value1, Integer value2 ) {

			addCriterion( "account_id between", value1, value2, "accountId" );
			return this;
		}


		public Criteria andAccountIdNotBetween( Integer value1, Integer value2 ) {

			addCriterion( "account_id not between", value1, value2, "accountId" );
			return this;
		}


		public Criteria andPasswordIsNull() {

			addCriterion( "password is null" );
			return this;
		}


		public Criteria andPasswordIsNotNull() {

			addCriterion( "password is not null" );
			return this;
		}


		public Criteria andPasswordEqualTo( String value ) {

			addCriterion( "password =", value, "password" );
			return this;
		}


		public Criteria andPasswordNotEqualTo( String value ) {

			addCriterion( "password <>", value, "password" );
			return this;
		}


		public Criteria andPasswordGreaterThan( String value ) {

			addCriterion( "password >", value, "password" );
			return this;
		}


		public Criteria andPasswordGreaterThanOrEqualTo( String value ) {

			addCriterion( "password >=", value, "password" );
			return this;
		}


		public Criteria andPasswordLessThan( String value ) {

			addCriterion( "password <", value, "password" );
			return this;
		}


		public Criteria andPasswordLessThanOrEqualTo( String value ) {

			addCriterion( "password <=", value, "password" );
			return this;
		}


		public Criteria andPasswordLike( String value ) {

			addCriterion( "password like", value, "password" );
			return this;
		}


		public Criteria andPasswordNotLike( String value ) {

			addCriterion( "password not like", value, "password" );
			return this;
		}


		public Criteria andPasswordIn( List values ) {

			addCriterion( "password in", values, "password" );
			return this;
		}


		public Criteria andPasswordNotIn( List values ) {

			addCriterion( "password not in", values, "password" );
			return this;
		}


		public Criteria andPasswordBetween( String value1, String value2 ) {

			addCriterion( "password between", value1, value2, "password" );
			return this;
		}


		public Criteria andPasswordNotBetween( String value1, String value2 ) {

			addCriterion( "password not between", value1, value2, "password" );
			return this;
		}


		public Criteria andStatisticsTypeIsNull() {

			addCriterion( "statistics_type is null" );
			return this;
		}


		public Criteria andStatisticsTypeIsNotNull() {

			addCriterion( "statistics_type is not null" );
			return this;
		}


		public Criteria andStatisticsTypeEqualTo( Integer value ) {

			addCriterion( "statistics_type =", value, "statisticsType" );
			return this;
		}


		public Criteria andStatisticsTypeNotEqualTo( Integer value ) {

			addCriterion( "statistics_type <>", value, "statisticsType" );
			return this;
		}


		public Criteria andStatisticsTypeGreaterThan( Integer value ) {

			addCriterion( "statistics_type >", value, "statisticsType" );
			return this;
		}


		public Criteria andStatisticsTypeGreaterThanOrEqualTo( Integer value ) {

			addCriterion( "statistics_type >=", value, "statisticsType" );
			return this;
		}


		public Criteria andStatisticsTypeLessThan( Integer value ) {

			addCriterion( "statistics_type <", value, "statisticsType" );
			return this;
		}


		public Criteria andStatisticsTypeLessThanOrEqualTo( Integer value ) {

			addCriterion( "statistics_type <=", value, "statisticsType" );
			return this;
		}


		public Criteria andStatisticsTypeIn( List values ) {

			addCriterion( "statistics_type in", values, "statisticsType" );
			return this;
		}


		public Criteria andStatisticsTypeNotIn( List values ) {

			addCriterion( "statistics_type not in", values, "statisticsType" );
			return this;
		}


		public Criteria andStatisticsTypeBetween( Integer value1, Integer value2 ) {

			addCriterion( "statistics_type between", value1, value2, "statisticsType" );
			return this;
		}


		public Criteria andStatisticsTypeNotBetween( Integer value1, Integer value2 ) {

			addCriterion( "statistics_type not between", value1, value2, "statisticsType" );
			return this;
		}


		public Criteria andScoreTypeIsNull() {

			addCriterion( "score_type is null" );
			return this;
		}


		public Criteria andScoreTypeIsNotNull() {

			addCriterion( "score_type is not null" );
			return this;
		}


		public Criteria andScoreTypeEqualTo( Integer value ) {

			addCriterion( "score_type =", value, "scoreType" );
			return this;
		}


		public Criteria andScoreTypeNotEqualTo( Integer value ) {

			addCriterion( "score_type <>", value, "scoreType" );
			return this;
		}


		public Criteria andScoreTypeGreaterThan( Integer value ) {

			addCriterion( "score_type >", value, "scoreType" );
			return this;
		}


		public Criteria andScoreTypeGreaterThanOrEqualTo( Integer value ) {

			addCriterion( "score_type >=", value, "scoreType" );
			return this;
		}


		public Criteria andScoreTypeLessThan( Integer value ) {

			addCriterion( "score_type <", value, "scoreType" );
			return this;
		}


		public Criteria andScoreTypeLessThanOrEqualTo( Integer value ) {

			addCriterion( "score_type <=", value, "scoreType" );
			return this;
		}


		public Criteria andScoreTypeIn( List values ) {

			addCriterion( "score_type in", values, "scoreType" );
			return this;
		}


		public Criteria andScoreTypeNotIn( List values ) {

			addCriterion( "score_type not in", values, "scoreType" );
			return this;
		}


		public Criteria andScoreTypeBetween( Integer value1, Integer value2 ) {

			addCriterion( "score_type between", value1, value2, "scoreType" );
			return this;
		}


		public Criteria andScoreTypeNotBetween( Integer value1, Integer value2 ) {

			addCriterion( "score_type not between", value1, value2, "scoreType" );
			return this;
		}
	}
}