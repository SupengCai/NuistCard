package com.linklife.domain.ibator;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * <p>
 * SearchHistoryExample.java
 * </p>
 * 
 * <pre>
 * 用户搜索历史表对应实体类
 * </pre>
 * 
 * @author caisupeng
 */
public class SearchHistoryExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table search_history
	 * @ibatorgenerated  Tue Aug 19 11:37:43 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table search_history
	 * @ibatorgenerated  Tue Aug 19 11:37:43 CST 2014
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table search_history
	 * @ibatorgenerated  Tue Aug 19 11:37:43 CST 2014
	 */
	public SearchHistoryExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table search_history
	 * @ibatorgenerated  Tue Aug 19 11:37:43 CST 2014
	 */
	protected SearchHistoryExample(SearchHistoryExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table search_history
	 * @ibatorgenerated  Tue Aug 19 11:37:43 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table search_history
	 * @ibatorgenerated  Tue Aug 19 11:37:43 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table search_history
	 * @ibatorgenerated  Tue Aug 19 11:37:43 CST 2014
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table search_history
	 * @ibatorgenerated  Tue Aug 19 11:37:43 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table search_history
	 * @ibatorgenerated  Tue Aug 19 11:37:43 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table search_history
	 * @ibatorgenerated  Tue Aug 19 11:37:43 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table search_history
	 * @ibatorgenerated  Tue Aug 19 11:37:43 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table search_history
	 * @ibatorgenerated  Tue Aug 19 11:37:43 CST 2014
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andSearchIdIsNull() {
			addCriterion("search_id is null");
			return this;
		}

		public Criteria andSearchIdIsNotNull() {
			addCriterion("search_id is not null");
			return this;
		}

		public Criteria andSearchIdEqualTo(Integer value) {
			addCriterion("search_id =", value, "searchId");
			return this;
		}

		public Criteria andSearchIdNotEqualTo(Integer value) {
			addCriterion("search_id <>", value, "searchId");
			return this;
		}

		public Criteria andSearchIdGreaterThan(Integer value) {
			addCriterion("search_id >", value, "searchId");
			return this;
		}

		public Criteria andSearchIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("search_id >=", value, "searchId");
			return this;
		}

		public Criteria andSearchIdLessThan(Integer value) {
			addCriterion("search_id <", value, "searchId");
			return this;
		}

		public Criteria andSearchIdLessThanOrEqualTo(Integer value) {
			addCriterion("search_id <=", value, "searchId");
			return this;
		}

		public Criteria andSearchIdIn(List values) {
			addCriterion("search_id in", values, "searchId");
			return this;
		}

		public Criteria andSearchIdNotIn(List values) {
			addCriterion("search_id not in", values, "searchId");
			return this;
		}

		public Criteria andSearchIdBetween(Integer value1, Integer value2) {
			addCriterion("search_id between", value1, value2, "searchId");
			return this;
		}

		public Criteria andSearchIdNotBetween(Integer value1, Integer value2) {
			addCriterion("search_id not between", value1, value2, "searchId");
			return this;
		}

		public Criteria andEmailIsNull() {
			addCriterion("email is null");
			return this;
		}

		public Criteria andEmailIsNotNull() {
			addCriterion("email is not null");
			return this;
		}

		public Criteria andEmailEqualTo(String value) {
			addCriterion("email =", value, "email");
			return this;
		}

		public Criteria andEmailNotEqualTo(String value) {
			addCriterion("email <>", value, "email");
			return this;
		}

		public Criteria andEmailGreaterThan(String value) {
			addCriterion("email >", value, "email");
			return this;
		}

		public Criteria andEmailGreaterThanOrEqualTo(String value) {
			addCriterion("email >=", value, "email");
			return this;
		}

		public Criteria andEmailLessThan(String value) {
			addCriterion("email <", value, "email");
			return this;
		}

		public Criteria andEmailLessThanOrEqualTo(String value) {
			addCriterion("email <=", value, "email");
			return this;
		}

		public Criteria andEmailLike(String value) {
			addCriterion("email like", value, "email");
			return this;
		}

		public Criteria andEmailNotLike(String value) {
			addCriterion("email not like", value, "email");
			return this;
		}

		public Criteria andEmailIn(List values) {
			addCriterion("email in", values, "email");
			return this;
		}

		public Criteria andEmailNotIn(List values) {
			addCriterion("email not in", values, "email");
			return this;
		}

		public Criteria andEmailBetween(String value1, String value2) {
			addCriterion("email between", value1, value2, "email");
			return this;
		}

		public Criteria andEmailNotBetween(String value1, String value2) {
			addCriterion("email not between", value1, value2, "email");
			return this;
		}

		public Criteria andTimeIsNull() {
			addCriterion("time is null");
			return this;
		}

		public Criteria andTimeIsNotNull() {
			addCriterion("time is not null");
			return this;
		}

		public Criteria andTimeEqualTo(Date value) {
			addCriterion("time =", value, "time");
			return this;
		}

		public Criteria andTimeNotEqualTo(Date value) {
			addCriterion("time <>", value, "time");
			return this;
		}

		public Criteria andTimeGreaterThan(Date value) {
			addCriterion("time >", value, "time");
			return this;
		}

		public Criteria andTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("time >=", value, "time");
			return this;
		}

		public Criteria andTimeLessThan(Date value) {
			addCriterion("time <", value, "time");
			return this;
		}

		public Criteria andTimeLessThanOrEqualTo(Date value) {
			addCriterion("time <=", value, "time");
			return this;
		}

		public Criteria andTimeIn(List values) {
			addCriterion("time in", values, "time");
			return this;
		}

		public Criteria andTimeNotIn(List values) {
			addCriterion("time not in", values, "time");
			return this;
		}

		public Criteria andTimeBetween(Date value1, Date value2) {
			addCriterion("time between", value1, value2, "time");
			return this;
		}

		public Criteria andTimeNotBetween(Date value1, Date value2) {
			addCriterion("time not between", value1, value2, "time");
			return this;
		}

		public Criteria andCityIsNull() {
			addCriterion("city is null");
			return this;
		}

		public Criteria andCityIsNotNull() {
			addCriterion("city is not null");
			return this;
		}

		public Criteria andCityEqualTo(String value) {
			addCriterion("city =", value, "city");
			return this;
		}

		public Criteria andCityNotEqualTo(String value) {
			addCriterion("city <>", value, "city");
			return this;
		}

		public Criteria andCityGreaterThan(String value) {
			addCriterion("city >", value, "city");
			return this;
		}

		public Criteria andCityGreaterThanOrEqualTo(String value) {
			addCriterion("city >=", value, "city");
			return this;
		}

		public Criteria andCityLessThan(String value) {
			addCriterion("city <", value, "city");
			return this;
		}

		public Criteria andCityLessThanOrEqualTo(String value) {
			addCriterion("city <=", value, "city");
			return this;
		}

		public Criteria andCityLike(String value) {
			addCriterion("city like", value, "city");
			return this;
		}

		public Criteria andCityNotLike(String value) {
			addCriterion("city not like", value, "city");
			return this;
		}

		public Criteria andCityIn(List values) {
			addCriterion("city in", values, "city");
			return this;
		}

		public Criteria andCityNotIn(List values) {
			addCriterion("city not in", values, "city");
			return this;
		}

		public Criteria andCityBetween(String value1, String value2) {
			addCriterion("city between", value1, value2, "city");
			return this;
		}

		public Criteria andCityNotBetween(String value1, String value2) {
			addCriterion("city not between", value1, value2, "city");
			return this;
		}

		public Criteria andKeywordIsNull() {
			addCriterion("keyword is null");
			return this;
		}

		public Criteria andKeywordIsNotNull() {
			addCriterion("keyword is not null");
			return this;
		}

		public Criteria andKeywordEqualTo(String value) {
			addCriterion("keyword =", value, "keyword");
			return this;
		}

		public Criteria andKeywordNotEqualTo(String value) {
			addCriterion("keyword <>", value, "keyword");
			return this;
		}

		public Criteria andKeywordGreaterThan(String value) {
			addCriterion("keyword >", value, "keyword");
			return this;
		}

		public Criteria andKeywordGreaterThanOrEqualTo(String value) {
			addCriterion("keyword >=", value, "keyword");
			return this;
		}

		public Criteria andKeywordLessThan(String value) {
			addCriterion("keyword <", value, "keyword");
			return this;
		}

		public Criteria andKeywordLessThanOrEqualTo(String value) {
			addCriterion("keyword <=", value, "keyword");
			return this;
		}

		public Criteria andKeywordLike(String value) {
			addCriterion("keyword like", value, "keyword");
			return this;
		}

		public Criteria andKeywordNotLike(String value) {
			addCriterion("keyword not like", value, "keyword");
			return this;
		}

		public Criteria andKeywordIn(List values) {
			addCriterion("keyword in", values, "keyword");
			return this;
		}

		public Criteria andKeywordNotIn(List values) {
			addCriterion("keyword not in", values, "keyword");
			return this;
		}

		public Criteria andKeywordBetween(String value1, String value2) {
			addCriterion("keyword between", value1, value2, "keyword");
			return this;
		}

		public Criteria andKeywordNotBetween(String value1, String value2) {
			addCriterion("keyword not between", value1, value2, "keyword");
			return this;
		}

		public Criteria andSearchIpIsNull() {
			addCriterion("search_ip is null");
			return this;
		}

		public Criteria andSearchIpIsNotNull() {
			addCriterion("search_ip is not null");
			return this;
		}

		public Criteria andSearchIpEqualTo(String value) {
			addCriterion("search_ip =", value, "searchIp");
			return this;
		}

		public Criteria andSearchIpNotEqualTo(String value) {
			addCriterion("search_ip <>", value, "searchIp");
			return this;
		}

		public Criteria andSearchIpGreaterThan(String value) {
			addCriterion("search_ip >", value, "searchIp");
			return this;
		}

		public Criteria andSearchIpGreaterThanOrEqualTo(String value) {
			addCriterion("search_ip >=", value, "searchIp");
			return this;
		}

		public Criteria andSearchIpLessThan(String value) {
			addCriterion("search_ip <", value, "searchIp");
			return this;
		}

		public Criteria andSearchIpLessThanOrEqualTo(String value) {
			addCriterion("search_ip <=", value, "searchIp");
			return this;
		}

		public Criteria andSearchIpLike(String value) {
			addCriterion("search_ip like", value, "searchIp");
			return this;
		}

		public Criteria andSearchIpNotLike(String value) {
			addCriterion("search_ip not like", value, "searchIp");
			return this;
		}

		public Criteria andSearchIpIn(List values) {
			addCriterion("search_ip in", values, "searchIp");
			return this;
		}

		public Criteria andSearchIpNotIn(List values) {
			addCriterion("search_ip not in", values, "searchIp");
			return this;
		}

		public Criteria andSearchIpBetween(String value1, String value2) {
			addCriterion("search_ip between", value1, value2, "searchIp");
			return this;
		}

		public Criteria andSearchIpNotBetween(String value1, String value2) {
			addCriterion("search_ip not between", value1, value2, "searchIp");
			return this;
		}
	}
}