package com.linklife.domain.ibator;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class NuistSuggestExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public NuistSuggestExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	protected NuistSuggestExample(NuistSuggestExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table nuist_suggest
	 * @ibatorgenerated  Mon Jul 27 13:37:47 CST 2015
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andSuggestIdIsNull() {
			addCriterion("suggest_id is null");
			return this;
		}

		public Criteria andSuggestIdIsNotNull() {
			addCriterion("suggest_id is not null");
			return this;
		}

		public Criteria andSuggestIdEqualTo(Integer value) {
			addCriterion("suggest_id =", value, "suggestId");
			return this;
		}

		public Criteria andSuggestIdNotEqualTo(Integer value) {
			addCriterion("suggest_id <>", value, "suggestId");
			return this;
		}

		public Criteria andSuggestIdGreaterThan(Integer value) {
			addCriterion("suggest_id >", value, "suggestId");
			return this;
		}

		public Criteria andSuggestIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("suggest_id >=", value, "suggestId");
			return this;
		}

		public Criteria andSuggestIdLessThan(Integer value) {
			addCriterion("suggest_id <", value, "suggestId");
			return this;
		}

		public Criteria andSuggestIdLessThanOrEqualTo(Integer value) {
			addCriterion("suggest_id <=", value, "suggestId");
			return this;
		}

		public Criteria andSuggestIdIn(List values) {
			addCriterion("suggest_id in", values, "suggestId");
			return this;
		}

		public Criteria andSuggestIdNotIn(List values) {
			addCriterion("suggest_id not in", values, "suggestId");
			return this;
		}

		public Criteria andSuggestIdBetween(Integer value1, Integer value2) {
			addCriterion("suggest_id between", value1, value2, "suggestId");
			return this;
		}

		public Criteria andSuggestIdNotBetween(Integer value1, Integer value2) {
			addCriterion("suggest_id not between", value1, value2, "suggestId");
			return this;
		}

		public Criteria andAccountIdIsNull() {
			addCriterion("account_id is null");
			return this;
		}

		public Criteria andAccountIdIsNotNull() {
			addCriterion("account_id is not null");
			return this;
		}

		public Criteria andAccountIdEqualTo(Integer value) {
			addCriterion("account_id =", value, "accountId");
			return this;
		}

		public Criteria andAccountIdNotEqualTo(Integer value) {
			addCriterion("account_id <>", value, "accountId");
			return this;
		}

		public Criteria andAccountIdGreaterThan(Integer value) {
			addCriterion("account_id >", value, "accountId");
			return this;
		}

		public Criteria andAccountIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("account_id >=", value, "accountId");
			return this;
		}

		public Criteria andAccountIdLessThan(Integer value) {
			addCriterion("account_id <", value, "accountId");
			return this;
		}

		public Criteria andAccountIdLessThanOrEqualTo(Integer value) {
			addCriterion("account_id <=", value, "accountId");
			return this;
		}

		public Criteria andAccountIdIn(List values) {
			addCriterion("account_id in", values, "accountId");
			return this;
		}

		public Criteria andAccountIdNotIn(List values) {
			addCriterion("account_id not in", values, "accountId");
			return this;
		}

		public Criteria andAccountIdBetween(Integer value1, Integer value2) {
			addCriterion("account_id between", value1, value2, "accountId");
			return this;
		}

		public Criteria andAccountIdNotBetween(Integer value1, Integer value2) {
			addCriterion("account_id not between", value1, value2, "accountId");
			return this;
		}

		public Criteria andParentIdIsNull() {
			addCriterion("parent_id is null");
			return this;
		}

		public Criteria andParentIdIsNotNull() {
			addCriterion("parent_id is not null");
			return this;
		}

		public Criteria andParentIdEqualTo(Integer value) {
			addCriterion("parent_id =", value, "parentId");
			return this;
		}

		public Criteria andParentIdNotEqualTo(Integer value) {
			addCriterion("parent_id <>", value, "parentId");
			return this;
		}

		public Criteria andParentIdGreaterThan(Integer value) {
			addCriterion("parent_id >", value, "parentId");
			return this;
		}

		public Criteria andParentIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("parent_id >=", value, "parentId");
			return this;
		}

		public Criteria andParentIdLessThan(Integer value) {
			addCriterion("parent_id <", value, "parentId");
			return this;
		}

		public Criteria andParentIdLessThanOrEqualTo(Integer value) {
			addCriterion("parent_id <=", value, "parentId");
			return this;
		}

		public Criteria andParentIdIn(List values) {
			addCriterion("parent_id in", values, "parentId");
			return this;
		}

		public Criteria andParentIdNotIn(List values) {
			addCriterion("parent_id not in", values, "parentId");
			return this;
		}

		public Criteria andParentIdBetween(Integer value1, Integer value2) {
			addCriterion("parent_id between", value1, value2, "parentId");
			return this;
		}

		public Criteria andParentIdNotBetween(Integer value1, Integer value2) {
			addCriterion("parent_id not between", value1, value2, "parentId");
			return this;
		}

		public Criteria andUsernameIsNull() {
			addCriterion("username is null");
			return this;
		}

		public Criteria andUsernameIsNotNull() {
			addCriterion("username is not null");
			return this;
		}

		public Criteria andUsernameEqualTo(String value) {
			addCriterion("username =", value, "username");
			return this;
		}

		public Criteria andUsernameNotEqualTo(String value) {
			addCriterion("username <>", value, "username");
			return this;
		}

		public Criteria andUsernameGreaterThan(String value) {
			addCriterion("username >", value, "username");
			return this;
		}

		public Criteria andUsernameGreaterThanOrEqualTo(String value) {
			addCriterion("username >=", value, "username");
			return this;
		}

		public Criteria andUsernameLessThan(String value) {
			addCriterion("username <", value, "username");
			return this;
		}

		public Criteria andUsernameLessThanOrEqualTo(String value) {
			addCriterion("username <=", value, "username");
			return this;
		}

		public Criteria andUsernameLike(String value) {
			addCriterion("username like", value, "username");
			return this;
		}

		public Criteria andUsernameNotLike(String value) {
			addCriterion("username not like", value, "username");
			return this;
		}

		public Criteria andUsernameIn(List values) {
			addCriterion("username in", values, "username");
			return this;
		}

		public Criteria andUsernameNotIn(List values) {
			addCriterion("username not in", values, "username");
			return this;
		}

		public Criteria andUsernameBetween(String value1, String value2) {
			addCriterion("username between", value1, value2, "username");
			return this;
		}

		public Criteria andUsernameNotBetween(String value1, String value2) {
			addCriterion("username not between", value1, value2, "username");
			return this;
		}

		public Criteria andUsernumberIsNull() {
			addCriterion("usernumber is null");
			return this;
		}

		public Criteria andUsernumberIsNotNull() {
			addCriterion("usernumber is not null");
			return this;
		}

		public Criteria andUsernumberEqualTo(String value) {
			addCriterion("usernumber =", value, "usernumber");
			return this;
		}

		public Criteria andUsernumberNotEqualTo(String value) {
			addCriterion("usernumber <>", value, "usernumber");
			return this;
		}

		public Criteria andUsernumberGreaterThan(String value) {
			addCriterion("usernumber >", value, "usernumber");
			return this;
		}

		public Criteria andUsernumberGreaterThanOrEqualTo(String value) {
			addCriterion("usernumber >=", value, "usernumber");
			return this;
		}

		public Criteria andUsernumberLessThan(String value) {
			addCriterion("usernumber <", value, "usernumber");
			return this;
		}

		public Criteria andUsernumberLessThanOrEqualTo(String value) {
			addCriterion("usernumber <=", value, "usernumber");
			return this;
		}

		public Criteria andUsernumberLike(String value) {
			addCriterion("usernumber like", value, "usernumber");
			return this;
		}

		public Criteria andUsernumberNotLike(String value) {
			addCriterion("usernumber not like", value, "usernumber");
			return this;
		}

		public Criteria andUsernumberIn(List values) {
			addCriterion("usernumber in", values, "usernumber");
			return this;
		}

		public Criteria andUsernumberNotIn(List values) {
			addCriterion("usernumber not in", values, "usernumber");
			return this;
		}

		public Criteria andUsernumberBetween(String value1, String value2) {
			addCriterion("usernumber between", value1, value2, "usernumber");
			return this;
		}

		public Criteria andUsernumberNotBetween(String value1, String value2) {
			addCriterion("usernumber not between", value1, value2, "usernumber");
			return this;
		}

		public Criteria andSuggestIsNull() {
			addCriterion("suggest is null");
			return this;
		}

		public Criteria andSuggestIsNotNull() {
			addCriterion("suggest is not null");
			return this;
		}

		public Criteria andSuggestEqualTo(String value) {
			addCriterion("suggest =", value, "suggest");
			return this;
		}

		public Criteria andSuggestNotEqualTo(String value) {
			addCriterion("suggest <>", value, "suggest");
			return this;
		}

		public Criteria andSuggestGreaterThan(String value) {
			addCriterion("suggest >", value, "suggest");
			return this;
		}

		public Criteria andSuggestGreaterThanOrEqualTo(String value) {
			addCriterion("suggest >=", value, "suggest");
			return this;
		}

		public Criteria andSuggestLessThan(String value) {
			addCriterion("suggest <", value, "suggest");
			return this;
		}

		public Criteria andSuggestLessThanOrEqualTo(String value) {
			addCriterion("suggest <=", value, "suggest");
			return this;
		}

		public Criteria andSuggestLike(String value) {
			addCriterion("suggest like", value, "suggest");
			return this;
		}

		public Criteria andSuggestNotLike(String value) {
			addCriterion("suggest not like", value, "suggest");
			return this;
		}

		public Criteria andSuggestIn(List values) {
			addCriterion("suggest in", values, "suggest");
			return this;
		}

		public Criteria andSuggestNotIn(List values) {
			addCriterion("suggest not in", values, "suggest");
			return this;
		}

		public Criteria andSuggestBetween(String value1, String value2) {
			addCriterion("suggest between", value1, value2, "suggest");
			return this;
		}

		public Criteria andSuggestNotBetween(String value1, String value2) {
			addCriterion("suggest not between", value1, value2, "suggest");
			return this;
		}

		public Criteria andAddtimeIsNull() {
			addCriterion("addtime is null");
			return this;
		}

		public Criteria andAddtimeIsNotNull() {
			addCriterion("addtime is not null");
			return this;
		}

		public Criteria andAddtimeEqualTo(Date value) {
			addCriterion("addtime =", value, "addtime");
			return this;
		}

		public Criteria andAddtimeNotEqualTo(Date value) {
			addCriterion("addtime <>", value, "addtime");
			return this;
		}

		public Criteria andAddtimeGreaterThan(Date value) {
			addCriterion("addtime >", value, "addtime");
			return this;
		}

		public Criteria andAddtimeGreaterThanOrEqualTo(Date value) {
			addCriterion("addtime >=", value, "addtime");
			return this;
		}

		public Criteria andAddtimeLessThan(Date value) {
			addCriterion("addtime <", value, "addtime");
			return this;
		}

		public Criteria andAddtimeLessThanOrEqualTo(Date value) {
			addCriterion("addtime <=", value, "addtime");
			return this;
		}

		public Criteria andAddtimeIn(List values) {
			addCriterion("addtime in", values, "addtime");
			return this;
		}

		public Criteria andAddtimeNotIn(List values) {
			addCriterion("addtime not in", values, "addtime");
			return this;
		}

		public Criteria andAddtimeBetween(Date value1, Date value2) {
			addCriterion("addtime between", value1, value2, "addtime");
			return this;
		}

		public Criteria andAddtimeNotBetween(Date value1, Date value2) {
			addCriterion("addtime not between", value1, value2, "addtime");
			return this;
		}
	}
}